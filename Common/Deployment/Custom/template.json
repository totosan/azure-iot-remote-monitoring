{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aadTenant": {
      "type": "String",
      "metadata": {
        "description": "The name of the service Tenant"
      }
    },
    "aadInstance": {
      "defaultValue": "https://login.microsoftonline.com/{0}",
      "type": "String",
      "metadata": {
        "description": "Url of the AAD login page (example: https://login.microsoftonline.de/{0})"
      }
    },
    "aadClientId": {
      "type": "String",
      "metadata": {
        "description": "AAD application identifier (GUID)"
      }
    },
    "storageEndpointSuffix": {
      "type": "String",
      "metadata": {
        "description": "Suffix added to Azure Storage hostname (examples: core.windows.net, core.cloudapi.de)"
      }
    },
    "bingMapsLocation": {
      "defaultValue": "westus",
      "type": "String",
      "metadata": {
        "description": "Bing Maps region"
      }
    },
    "suiteName": {
      "type": "String",
      "metadata": {
        "description": "The name of the suite"
      }
    },
    "docDBName": {
      "type": "String",
      "metadata": {
        "description": "The name of the documentDB"
      }
    },
    "docDBSku": {
      "defaultValue": "Standard",
      "type": "String",
      "metadata": {
        "description": "The DocumentDB Sku"
      }
    },
    "storageName": {
      "type": "String",
      "metadata": {
        "description": "The name of the storageAccount"
      }
    },
    "storageAccountSku": {
      "defaultValue": "Standard_GRS",
      "type": "String",
      "metadata": {
        "description": "The storage Sku"
      }
    },
    "iotHubName": {
      "type": "String",
      "metadata": {
        "description": "The name of the iotHub"
      }
    },
    "iotHubSku": {
      "defaultValue": "S2",
      "type": "String",
      "metadata": {
        "description": "The Iothub Sku"
      }
    },
    "iotHubTier": {
      "defaultValue": "Standard",
      "type": "String",
      "metadata": {
        "description": "The Iothub tier"
      }
    },
    "sbName": {
      "type": "String",
      "metadata": {
        "description": "The name of the serviceBus"
      }
    },
    "sbSku": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "The servicebus Sku"
      }
    },
    "packageUri": {
      "defaultValue": "http://aka.ms/azureiot/remotemonitoring/web",
      "type": "String"
    },
    "webJobPackageUri": {
      "defaultValue": "http://aka.ms/azureiot/remotemonitoring/webjob",
      "type": "String"
    },
    "webSku": {
      "defaultValue": "Premium",
      "type": "String",
      "metadata": {
        "description": "The Sku type of the webapp"
      }
    },
    "webWorkerSize": {
      "defaultValue": 0,
      "type": "Int",
      "metadata": {
        "description": "The size of the webapp"
      }
    },
    "webWorkerCount": {
      "defaultValue": 2,
      "type": "Int",
      "metadata": {
        "description": "The webapp worker count"
      }
    },
    "webJobSku": {
      "defaultValue": "Standard",
      "type": "String",
      "metadata": {
        "description": "The Sku type of the webjob"
      }
    },
    "webJobWorkerSize": {
      "defaultValue": 0,
      "type": "Int",
      "metadata": {
        "description": "The size of the webjob"
      }
    },
    "webJobWorkerCount": {
      "defaultValue": 2,
      "type": "Int",
      "metadata": {
        "description": "The webjob worker count"
      }
    },
    "asaStartBehavior": {
      "defaultValue": "JobStartTime",
      "type": "String",
      "metadata": {
        "description": "The start behavior for Stream Analytics jobs [LastStopTime | JobStartTime (default)]"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "storageVersion": "2015-05-01-preview",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('suiteName'))]",
    "sbVersion": "[providers('Microsoft.Servicebus', 'namespaces').apiVersions[0]]",
    "ehOutName": "[concat(parameters('suiteName'), '-ehout')]",
    "ehRuleOutName": "[concat(parameters('suiteName'), '-ehruleout')]",
    "sbKeyName": "RootManageSharedAccessKey",
    "sbResourceId": "[resourceId('Microsoft.Servicebus/namespaces/authorizationRules', parameters('suiteName'), variables('sbKeyName'))]",
    "saVersion": "2015-10-01",
    "webVersion": "2015-04-01",
    "bingMapsName": "[concat(parameters('suiteName'), '-map')]",
    "bingMapsVersion": "2015-07-02",
    "webJobPlanName": "[concat(parameters('suiteName'), '-jobsplan')]",
    "webJobSiteName": "[concat(parameters('suiteName'), '-jobhost')]",
    "webPlanName": "[concat(parameters('suiteName'), '-plan')]",
    "webSiteName": "[parameters('suiteName')]",
    "storageEndpointSuffix": "[parameters('storageEndpointSuffix')]",
    "docDBVersion": "2015-04-08",
    "docDBResourceId": "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('suiteName'))]",
    "iotHubVersion": "2015-08-15-preview",
    "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('suiteName'))]",
    "iotHubKeyName": "iothubowner",
    "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('suiteName'), variables('iotHubKeyName'))]",
    "rulesCGName": "rulescg",
    "deviceInfoCGName": "deviceinfocg",
    "telemetryCGName": "telemetrycg",
    "suiteType": "RemoteMonitoring"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[parameters('suiteName')]",
      "apiVersion": "[variables('docDBVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "name": "[parameters('suiteName')]",
        "databaseAccountOfferType": "[parameters('docDBSku')]"
      }
    },
    {
      "type": "Microsoft.BingMaps/mapApis",
      "name": "[variables('bingMapsName')]",
      "apiVersion": "[variables('bingMapsVersion')]",
      "location": "[parameters('bingMapsLocation')]",
      "plan": {
        "publisher": "bingmaps",
        "product": "mapapis",
        "name": "internal1",
        "promotionCode": null
      },
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": { }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('suiteName')]",
      "apiVersion": "[variables('storageVersion')]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[parameters('storageAccountSku')]"
      }
    },
    {
      "type": "Microsoft.Devices/Iothubs",
      "sku": {
        "name": "[parameters('iotHubSku')]",
        "tier": "[parameters('iotHubTier')]",
        "capacity": 1
      },
      "name": "[parameters('suiteName')]",
      "apiVersion": "[variables('iotHubVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "location": "[variables('location')]"
      }
    },
    {
      "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('suiteName'), '/events/', variables('rulesCGName'))]",
      "apiVersion": "[variables('iotHubVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('suiteName'), '/events/', variables('deviceInfoCGName'))]",
      "apiVersion": "[variables('iotHubVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
      "name": "[concat(parameters('suiteName'), '/events/', variables('telemetryCGName'))]",
      "apiVersion": "[variables('iotHubVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.Servicebus/namespaces",
      "name": "[parameters('suiteName')]",
      "apiVersion": "[variables('sbVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "messagingSku": "[parameters('sbSku')]",
        "region": "[variables('location')]"
      },
      "resources": [
        {
          "type": "eventHubs",
          "name": "[variables('ehOutName')]",
          "apiVersion": "[variables('sbVersion')]",
          "location": "[variables('location')]",
          "properties": {
            "path": "[variables('ehOutName')]",
            "MessageRetentionInDays": 1
          },
          "dependsOn": [
            "[concat('Microsoft.Servicebus/namespaces/', parameters('suiteName'))]"
          ]
        },
        {
          "type": "eventHubs",
          "name": "[variables('ehRuleOutName')]",
          "apiVersion": "[variables('sbVersion')]",
          "location": "[variables('location')]",
          "properties": {
            "path": "[variables('ehRuleOutName')]",
            "MessageRetentionInDays": 1
          },
          "dependsOn": [
            "[concat('Microsoft.Servicebus/namespaces/', parameters('suiteName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "name": "[concat(parameters('suiteName'), '-Telemetry')]",
      "apiVersion": "[variables('saVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "sku": {
          "name": "standard"
        },
        "OutputStartMode": "[parameters('asaStartBehavior')]",
        "EventsOutOfOrderMaxDelayInSeconds": 10,
        "EventsOutOfOrderPolicy": "adjust",
        "Inputs": [
          {
            "Name": "IoTHubStream",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "consumerGroupName": "[variables('telemetryCGName')]",
                  "iotHubNamespace": "[parameters('suiteName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                  "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                },
                "Type": "Microsoft.Devices/IotHubs"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Stream"
            }
          }
        ],
        "Outputs": [
          {
            "Name": "Telemetry",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "Container": "devicetelemetry",
                  "DateFormat": "yyyy/MM/dd",
                  "TimeFormat": "HH",
                  "PathPattern": "devicetelemetry/{date}/{time}",
                  "StorageAccounts": [
                    {
                      "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                      "AccountName": "[parameters('suiteName')]"
                    }
                  ]
                },
                "Type": "Microsoft.Storage/Blob"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "FieldDelimiter": ","
                },
                "Type": "Csv"
              }
            }
          },
          {
            "Name": "TelemetrySummary",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "Container": "devicetelemetry",
                  "DateFormat": "yyyy/MM/dd",
                  "TimeFormat": "HH",
                  "PathPattern": "devicetelemetry-summary/{date}/{time}",
                  "StorageAccounts": [
                    {
                      "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                      "AccountName": "[parameters('suiteName')]"
                    }
                  ]
                },
                "Type": "Microsoft.Storage/Blob"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "FieldDelimiter": ","
                },
                "Type": "Csv"
              }
            }
          }
        ],
        "Transformation": {
          "Name": "AllToBlob",
          "Properties": {
            "Query": "WITH \r\n    [StreamData]\r\nAS (\r\n    SELECT\r\n        *\r\n    FROM \r\n      [IoTHubStream] \r\n    WHERE\r\n        [ObjectType] IS NULL -- Filter out device info and command responses\r\n) \r\n\r\nSELECT\r\n    *\r\nINTO\r\n    [Telemetry]\r\nFROM\r\n    [StreamData]\r\n\r\nSELECT\r\n    DeviceId,\r\n    AVG (Humidity) AS [AverageHumidity], \r\n    MIN(Humidity) AS [MinimumHumidity], \r\n    MAX(Humidity) AS [MaxHumidity], \r\n    5.0 AS TimeframeMinutes \r\nINTO\r\n    [TelemetrySummary]\r\nFROM\r\n    [StreamData]\r\nWHERE\r\n    [Humidity] IS NOT NULL\r\nGROUP BY\r\n    DeviceId, \r\n    SlidingWindow (mi, 5)",
            "StreamingUnits": 1
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('suiteName'))]",
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "name": "[concat(parameters('suiteName'), '-DeviceInfo')]",
      "apiVersion": "[variables('saVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "sku": {
          "name": "standard"
        },
        "OutputStartMode": "[parameters('asaStartBehavior')]",
        "EventsOutOfOrderMaxDelayInSeconds": 10,
        "EventsOutOfOrderPolicy": "adjust",
        "Inputs": [
          {
            "Name": "DeviceDataStream",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "consumerGroupName": "[variables('deviceInfoCGName')]",
                  "iotHubNamespace": "[parameters('suiteName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                  "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                },
                "Type": "Microsoft.Devices/IotHubs"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Stream"
            }
          }
        ],
        "Outputs": [
          {
            "Name": "DeviceInfoEvents",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "EventHubName": "[variables('ehOutName')]",
                  "ServiceBusNamespace": "[parameters('suiteName')]",
                  "SharedAccessPolicyKey": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryKey]",
                  "SharedAccessPolicyName": "[variables('sbKeyName')]",
                  "PartitionKey": "PartitionId"
                },
                "Type": "Microsoft.ServiceBus/EventHub"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "Format": "Array"
                },
                "Type": "Json"
              }
            }
          }
        ],
        "Transformation": {
          "Name": "DeviceInfoFilter",
          "Properties": {
            "Query": "SELECT * FROM DeviceDataStream Partition By PartitionId WHERE  ObjectType = 'DeviceInfo'",
            "StreamingUnits": 1
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Servicebus/namespaces/', parameters('suiteName'), '/eventHubs/', variables('ehOutName'))]",
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "name": "[concat(parameters('suiteName'), '-Rules')]",
      "apiVersion": "[variables('saVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "sku": {
          "name": "standard"
        },
        "OutputStartMode": "[parameters('asaStartBehavior')]",
        "EventsOutOfOrderMaxDelayInSeconds": 10,
        "EventsOutOfOrderPolicy": "adjust",
        "Inputs": [
          {
            "Name": "DeviceRulesBlob",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "Container": "devicerules",
                  "DateFormat": "yyyy-MM-dd",
                  "PathPattern": "{date}/{time}/devicerules.json",
                  "BlobName": "{date}/{time}/devicerules.json",
                  "StorageAccounts": [
                    {
                      "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                      "AccountName": "[parameters('suiteName')]"
                    }
                  ],
                  "TimeFormat": "HH-mm"
                },
                "Type": "Microsoft.Storage/Blob"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Reference"
            }
          },
          {
            "Name": "IotTelemetryStream",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "consumerGroupName": "[variables('rulesCGName')]",
                  "iotHubNamespace": "[parameters('suiteName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                  "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                },
                "Type": "Microsoft.Devices/IotHubs"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Stream"
            }
          }
        ],
        "Outputs": [
          {
            "Name": "DeviceRulesHub",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "EventHubName": "[variables('ehRuleOutName')]",
                  "ServiceBusNamespace": "[parameters('suiteName')]",
                  "SharedAccessPolicyKey": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryKey]",
                  "SharedAccessPolicyName": "[variables('sbKeyName')]",
                  "PartitionKey": "PartitionId"
                },
                "Type": "Microsoft.ServiceBus/EventHub"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "Format": "Array"
                },
                "Type": "Json"
              }
            }
          },
          {
            "Name": "DeviceRulesMonitoring",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "Container": "rulesoutput",
                  "DateFormat": "yyyy/MM/dd",
                  "TimeFormat": "HH",
                  "PathPattern": "{date}/{time}",
                  "StorageAccounts": [
                    {
                      "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).key1]",
                      "AccountName": "[parameters('suiteName')]"
                    }
                  ]
                },
                "Type": "Microsoft.Storage/Blob"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "FieldDelimiter": ","
                },
                "Type": "Csv"
              }
            }
          }
        ],
        "Transformation": {
          "Name": "DeviceRules",
          "Properties": {
            "Query": "WITH AlarmsData AS \r\n(\r\nSELECT\r\n     Stream.DeviceID,\r\n     'Temperature' as ReadingType,\r\n     Stream.Temperature as Reading,\r\n     Ref.Temperature as Threshold,\r\n     Ref.TemperatureRuleOutput as RuleOutput,\r\n     Stream.EventEnqueuedUtcTime AS [Time]\r\nFROM IoTTelemetryStream Stream\r\nJOIN DeviceRulesBlob Ref ON Stream.DeviceID = Ref.DeviceID\r\nWHERE\r\n     Ref.Temperature IS NOT null AND Stream.Temperature > Ref.Temperature\r\n\r\nUNION ALL\r\n\r\nSELECT\r\n     Stream.DeviceID,\r\n     'Humidity' as ReadingType,\r\n     Stream.Humidity as Reading,\r\n     Ref.Humidity as Threshold,\r\n     Ref.HumidityRuleOutput as RuleOutput,\r\n     Stream.EventEnqueuedUtcTime AS [Time]\r\nFROM IoTTelemetryStream Stream\r\nJOIN DeviceRulesBlob Ref ON Stream.DeviceID = Ref.DeviceID\r\nWHERE\r\n     Ref.Humidity IS NOT null AND Stream.Humidity > Ref.Humidity\r\n)\r\n\r\nSELECT *\r\nINTO DeviceRulesMonitoring\r\nFROM AlarmsData\r\n\r\nSELECT *\r\nINTO DeviceRulesHub\r\nFROM AlarmsData",
            "StreamingUnits": 1
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('suiteName'))]",
        "[concat('Microsoft.Servicebus/namespaces/', parameters('suiteName'), '/eventHubs/', variables('ehRuleOutName'))]",
        "[concat('Microsoft.Devices/Iothubs/', parameters('suiteName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('webPlanName')]",
      "apiVersion": "[variables('webVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "name": "[variables('webPlanName')]",
        "sku": "[parameters('webSku')]",
        "workerSize": "[parameters('webWorkerSize')]",
        "numberOfWorkers": "[parameters('webWorkerCount')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "name": "[variables('webJobPlanName')]",
      "apiVersion": "[variables('webVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "name": "[variables('webJobPlanName')]",
        "sku": "[parameters('webJobSku')]",
        "workerSize": "[parameters('webJobWorkerSize')]",
        "numberOfWorkers": "[parameters('webJobWorkerCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('webSiteName')]",
      "apiVersion": "[variables('webVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "serverFarmId": "[variables('webPlanName')]",
        "siteConfig": {
          "AlwaysOn": true,
          "appSettings": [
            {
              "name": "ida.AADTenant",
              "value": "[parameters('AADTenant')]"
            },
            {
              "name": "ida.AADInstance",
              "value": "[parameters('aadInstance')]"
            },
            {
              "name": "ida.AADClientId",
              "value": "[parameters('aadClientId')]"
            },
            {
              "name": "docdb.EndpointUrl",
              "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
            },
            {
              "name": "docdb.PrimaryAuthorizationKey",
              "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
            },
            {
              "name": "iotHub.HostName",
              "value": "[reference(variables('iotHubResourceId')).hostName]"
            },
            {
              "name": "iotHub.ConnectionString",
              "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
            },
            {
              "name": "device.StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('suiteName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
            },
            {
              "name": "device.TableName",
              "value": "DeviceList"
            },
            {
              "name": "eventHub.HubName",
              "value": "[variables('ehOutName')]"
            },
            {
              "name": "eventHub.ConnectionString",
              "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
            },
            {
              "name": "eventHub.StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('suiteName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
            },
            {
              "name": "RulesEventHub.Name",
              "value": "[variables('ehRuleOutName')]"
            },
            {
              "name": "RulesEventHub.ConnectionString",
              "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
            },
            {
              "name": "ObjectTypePrefix",
              "value": ""
            },
            {
              "name": "MapApiQueryKey",
              "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
            },
            {
              "name": "SolutionName",
              "value": "[variables('webSiteName')]"
            }
          ]
        }
      },
      //"resources": [
      //  {
      //    "type": "extensions",
      //    "name": "MSDeploy",
      //    "apiVersion": "[variables('webVersion')]",
      //    "properties": {
      //      "packageUri": "[parameters('packageUri')]",
      //      "connectionString": "",
      //      "dbType": ""
      //    },
      //    "dependsOn": [
      //      "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
      //    ]
      //  }
      //],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('suiteName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('suiteName'))]",
        "[resourceId('Microsoft.Devices/Iothubs', parameters('suiteName'))]",
        "[resourceId('Microsoft.BingMaps/mapApis', variables('bingMapsName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('webJobSiteName')]",
      "apiVersion": "[variables('webVersion')]",
      "location": "[variables('location')]",
      "tags": {
        "iotSuiteType": "[variables('suiteType')]"
      },
      "properties": {
        "serverFarmId": "[variables('webJobPlanName')]",
        "siteConfig": {
          "AlwaysOn": true,
          "appSettings": [
            {
              "name": "ida.AADTenant",
              "value": "[parameters('AADTenant')]"
            },
            {
              "name": "ida.AADInstance",
              "value": "[parameters('aadInstance')]"
            },
            {
              "name": "ida.AADClientId",
              "value": "[parameters('aadClientId')]"
            },
            {
              "name": "docdb.EndpointUrl",
              "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
            },
            {
              "name": "docdb.PrimaryAuthorizationKey",
              "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
            },
            {
              "name": "iotHub.HostName",
              "value": "[reference(variables('iotHubResourceId')).hostName]"
            },
            {
              "name": "iotHub.ConnectionString",
              "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
            },
            {
              "name": "device.StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('suiteName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
            },
            {
              "name": "device.TableName",
              "value": "DeviceList"
            },
            {
              "name": "eventHub.HubName",
              "value": "[variables('ehOutName')]"
            },
            {
              "name": "eventHub.ConnectionString",
              "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
            },
            {
              "name": "eventHub.StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('suiteName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
            },
            {
              "name": "RulesEventHub.Name",
              "value": "[variables('ehRuleOutName')]"
            },
            {
              "name": "RulesEventHub.ConnectionString",
              "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
            },
            {
              "name": "ObjectTypePrefix",
              "value": ""
            },
            {
              "name": "MapApiQueryKey",
              "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
            },
            {
              "name": "SolutionName",
              "value": "[variables('webSiteName')]"
            }
          ]
        }
      },
      //"resources": [
      //  {
      //    "type": "extensions",
      //    "name": "MSDeploy",
      //    "apiVersion": "[variables('webVersion')]",
      //    "properties": {
      //      "packageUri": "[parameters('webJobPackageUri')]",
      //      "connectionString": "",
      //      "dbType": ""
      //    },
      //    "dependsOn": [
      //      "[resourceId('Microsoft.Web/Sites', variables('webJobSiteName'))]"
      //    ]
      //  }
      //],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webJobPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('suiteName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('suiteName'))]",
        "[resourceId('Microsoft.Devices/Iothubs', parameters('suiteName'))]",
        "[resourceId('Microsoft.BingMaps/mapApis', variables('bingMapsName'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-Telemetry'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-DeviceInfo'))]",
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-Rules'))]"
      ]
    }
  ],
  "outputs": {
    "iotHubHostName": {
      "type": "String",
      "value": "[reference(variables('iotHubResourceId')).hostName]"
    },
    "iotHubConnectionString": {
      "type": "String",
      "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
    },
    "docDbURI": {
      "type": "String",
      "value": "[reference(variables('docDBResourceId')).documentEndpoint]"
    },
    "docDbKey": {
      "type": "String",
      "value": "[listkeys(variables('docDBResourceId'), '2015-04-08').primaryMasterKey]"
    },
    "bingMapsQueryKey": {
      "type": "String",
      "value": "[listSecrets(variables('bingMapsName'), variables('bingMapsVersion')).QueryKey]"
    },
    "storageConnectionString": {
      "type": "String",
      "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('suiteName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
    },
    "ehOutName": {
      "type": "String",
      "value": "[variables('ehOutName')]"
    },
    "ehRuleName": {
      "type": "String",
      "value": "[variables('ehRuleOutName')]"
    },
    "ehConnectionString": {
      "type": "String",
      "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
    }
  }
}